topo_data:
  topology_name: "ec2-new"
  resource_groups:
    - resource_group_name: "aws"
      resource_group_type: "aws"
      resource_definitions:
        - name: demo-day
          role: aws_ec2
          flavor: 't2.micro'
          region: 'ca-central-1'
          image: 'ami-0b85d4ff00de6a225'
          count: 1
          instance_tags:
            color: blue
            shape: oval
          security_group:
            - default
        - name: "ec2_linchpin_keypair"
          role: "aws_ec2_key"
          region: "ca-central-1"
        - name: "aws_sg_test"
          role: "aws_sg"
          description: "aws ssh security group"
          region: "ca-central-1"
          rules:
            - rule_type: "inbound"
              from_port: "8"
              to_port: -1
              proto: "icmp"
              cidr_ip: "0.0.0.0/0"
            - rule_type: "inbound"
              from_port: 22
              to_port: 22
              proto: "tcp"
              cidr_ip: "0.0.0.0/0"
            - rule_type: "outbound"
              from_port: 0
              to_port: 65535
              proto: "all"
              cidr_ip: "0.0.0.0/0"
        - name: "linchpins3bucket"
          role: "aws_s3"
          region: "ca-central-1"
        - name: demodaycilp
          role: aws_ec2_eip
          region: "ca-central-1"
        - name: "demo_day_vpc"
          role: aws_ec2_vpc_net
          region: "ca-central-1"
          cidr_block: "10.10.0.0/16"
          tags:
            module: "fedora-aws_ec2_vpc_net"
            this: works
          tenancy: dedicated
        - name: demodayvpcsubnet
          role: aws_ec2_vpc_subnet
          region: "ca-central-1"
          vpc_name: demovpcnetsubnet
          cidr: "13.0.1.0/24"
          tags:
            module: "fedora-aws_ec2_vpc_subnet"
            this: works
        - name: demo_routetable
          role: aws_ec2_vpc_routetable
          region: ca-central-1
          vpc_name: demo_vpc_net_r
          tags:
            module: "fedora-aws_ec2_vpc_routetable"
            this: alsoworks
          subnets:
            - 'demo_vpc_subnet_r'
#        - name: demo_ec2_vpc_ep
#          role: aws_ec2_vpc_endpoint
#          region: ca-central-1
#          vpc_name: demo_vpc_net_ep
#          service: com.amazonaws.ca-central-1.s3
#          route_table_name: demo_routetable_ep
#        - name: demo_vpc_nat_gateway_ci_lp
#          role: aws_ec2_vpc_nat_gateway
#          region: ca-central-1
#          subnet_filters:
#            "tag:module": ec2vpcnatgateway_demo
#            "tag:distro": fedora
        - name: "fedora-demoec2elblbcilp"
          role: aws_ec2_elb_lb
          region: "ca-central-1'"
          zones:
          - ca-central-1a
          - ca-central-1b
          listeners:
          - protocol: http # options are http, https, ssl, tcp
            load_balancer_port: 80
            instance_port: 80
            proxy_protocol: True
        - name: demo_vpc_internet_gateway
          role: aws_ec2_vpc_internet_gateway
          region: ca-central-1
          vpc_name: "fedora-vpc-test"
