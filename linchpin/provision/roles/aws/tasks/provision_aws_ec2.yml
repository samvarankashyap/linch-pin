- name: "Set default res_grp_vars when not defined"
  set_fact:
    res_grp_vars:
      - name: "{{ res_def['res_name'] | default(res_def['name']) }}"
        resource_group_name: "{{ res_grp_name  }}"

- name: Update Instance Tags
  set_fact:
    instance_tags: "{{ res_grp_vars |
                       selectattr('resource_group_name', 'match',
                                  '^' + res_grp_name + '$') |
                       first |
                       combine( res_def['instance_tags'] |
                       default({}) ) }}"

- name: "Provisioning AWS_EC2 Resource when not async"
  ec2:
    aws_access_key: "{{ auth_var['aws_access_key_id'] | default(omit) }}"
    aws_secret_key: "{{  auth_var['aws_secret_access_key'] | default(omit) }}"
    key_name: "{{ res_def['keypair'] | default(omit) }}"
    instance_type: "{{ res_def['flavor'] }}"
    image: "{{ res_def['image'] }}"
    region: "{{ res_def['region'] }}"
    wait: false
    group: "{{ res_def['security_group']| default('default') }}"
    count: "{{ res_def['count'] | default('1') }}"
    vpc_subnet_id: "{{ res_def['vpc_subnet_id']| default(omit) }}"
    assign_public_ip: "{{ res_def['assign_public_ip']| default(omit) }}"
    instance_tags: "{{ instance_tags }}"
  register: res_def_output
  when: not _async
  no_log: "{{ not debug_mode }}"

- name: "Append outputitem to topology_outputs"
  set_fact:
    topology_outputs_aws_ec2: "{{ topology_outputs_aws_ec2 +
                                  [res_def_output] }}"
  when: res_def_output['changed'] and not _async

- name: "Async:: Provisioning AWS_EC2 Resource"
  ec2:
    aws_access_key: "{{ auth_var['aws_access_key_id'] | default(omit) }}"
    aws_secret_key: "{{  auth_var['aws_secret_access_key'] | default(omit) }}"
    key_name: "{{ res_def['keypair'] | default(omit) }}"
    instance_type: "{{ res_def['flavor'] }}"
    image: "{{ res_def['image'] }}"
    region: "{{ res_def['region'] }}"
    wait: true
    wait_timeout: "{{ res_def['wait_timeout'] | default(600) }}"
    group: "{{ res_def['security_group']| default('default') }}"
    count: "{{ res_def['count'] }}"
    vpc_subnet_id: "{{ res_def['vpc_subnet_id']| default(omit) }}"
    assign_public_ip: "{{ res_def['assign_public_ip'] | default(omit) }}"
    instance_tags: "{{ res_grp_vars |
                       selectattr('resource_group_name', 'match',
                                  '^' + res_grp_name + '$') |
                       first }}"
  async: "{{ async_timeout }}"
  poll: 0
  register: res_def_output
  when: _async
  no_log: "{{ not debug_mode }}"

- name: "Async:: Append outputitem to topology_outputs"
  set_fact:
    async_outputs_aws_ec2: "{{ async_outputs_aws_ec2 + [res_def_output] }}"
  when: _async

- name: "Add type to resource"
  set_fact:
    topology_outputs_aws_ec2: "{{ topology_outputs_aws_ec2 |
                                  add_res_data(lookup('vars', 'role_name'),
                                               res_def['role']) }}"

- name: "Async:: Add type to resource"
  set_fact:
    async_outputs_aws_ec2: "{{ async_outputs_aws_ec2 |
                               add_res_data(lookup('vars', 'role_name'),
                                            res_def['role']) }}"
  when: _async
