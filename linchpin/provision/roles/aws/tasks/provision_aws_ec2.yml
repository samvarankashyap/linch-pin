- name: "Set default res_grp_vars when not defined"
  set_fact:
    res_grp_vars:
      -       
        name: "{{ res_def['res_name'] | default(res_def['name']) }}"
        resource_group_name: "{{ res_grp_name  }}"
  when: res_grp_vars is not defined

- name: "Provisioning AWS_EC2 Resource when async == false"
  ec2:
    aws_access_key: "{{ aws_access_key_id | default(omit) }}"
    aws_secret_key: "{{  aws_secret_access_key | default(omit) }}"
    key_name: "{{ res_def['keypair'] }}"
    instance_type: "{{ res_def['flavor'] }}"
    image: "{{ res_def['image'] }}"
    region: "{{ res_def['region'] }}"
    wait: yes
    group: "{{ res_def['security_group']| default('default') }}" 
    count: "{{ res_def['count'] }}"
    vpc_subnet_id: "{{ res_def['vpc_subnet_id']| default(omit) }}"
    assign_public_ip: "{{ res_def['assign_public_ip']| default(omit) }}"
    instance_tags: "{{ res_grp_vars | selectattr('resource_group_name', 'equalto', res_grp_name ) | first }}"
  register: res_def_output
  when: async == false

- name: "Append outputitem to topology_outputs"
  set_fact:
    topology_outputs_aws_ec2: "{{ topology_outputs_aws_ec2 + [res_def_output] }}"
  when: res_def_output['changed'] == true and async == false

- name: "Async:: Provisioning AWS_EC2 Resource"
  ec2:
    aws_access_key: "{{ aws_access_key_id | default(omit) }}"
    aws_secret_key: "{{  aws_secret_access_key | default(omit) }}"
    key_name: "{{ res_def['keypair'] }}"
    instance_type: "{{ res_def['flavor'] }}"
    image: "{{ res_def['image'] }}"
    region: "{{ res_def['region'] }}"
    wait: yes
    group: "{{ res_def['security_group']| default('default') }}"
    count: "{{ res_def['count'] }}"
    vpc_subnet_id: "{{ res_def['vpc_subnet_id']| default(omit) }}"
    assign_public_ip: "{{ res_def['assign_public_ip'] | default(omit) }}"
    instance_tags: "{{ res_grp_vars | selectattr('resource_group_name', 'equalto', res_grp_name ) | first }}"
  async: "{{ async_timeout }}"
  poll: 0
  register: res_def_output
  when: async == true

- name: "Async:: Append outputitem to topology_outputs"
  set_fact:
    topology_outputs_aws_ec2: "{{ topology_outputs_aws_ec2 + [res_def_output] }}"
  when: async == true
