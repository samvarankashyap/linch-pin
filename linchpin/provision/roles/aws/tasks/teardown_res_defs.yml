#- name: "Select the resources based on the res_type or type"
#  set_fact:
       

- name: "teardown of ec2 resource definitions of current group"
  include: teardown_aws_ec2.yml res_def={{ res_item.0 }} tp_out={{ res_item.1 }} res_grp_name={{ res_item.2 }}
  when: res_item.0['res_type'] == "aws_ec2"
  with_nested:
    - "{{ res_grp['res_defs'] | default(res_grp['resource_definitions']) }}"
    - "{{ topo_output['output']['content']['aws_ec2_res'] }}"
    - ["{{ res_grp['resource_group_name']  }}"]
  loop_control:
    loop_var: res_item

- name: "teardown of s3 resource def of current group"
  include: teardown_aws_s3.yml res_def={{ res_item.0 }} res_grp_name={{ res_item.1 }}
  when: res_item.0['res_type'] == "aws_s3"
  with_nested:
    - "{{ res_grp['res_defs'] | default(res_grp['resource_definitions']) }}"
    - ["{{ res_grp['resource_group_name']  }}"]
  loop_control:
    loop_var: res_item

- name: "teardown of aws_ec2_key resource def of current group"
  include: teardown_aws_ec2_key.yml res_def={{ res_item.0 }} res_grp_name={{ res_item.1 }}
  when: res_item.0['res_type'] == "aws_ec2_key"
  with_nested:
    - "{{ res_grp['res_defs'] | default(res_grp['resource_definitions']) }}"
    - ["{{ res_grp['resource_group_name']  }}"]
  loop_control:
    loop_var: res_item

- name: "teardown cfn stack resource def of current group"
  include: teardown_aws_cfn.yml res_def={{ res_item.0 }} res_grp_name={{ res_item.1 }}
  when: res_item.0['res_type'] == "aws_cfn"
  with_nested:
    - "{{ res_grp['res_defs'] | default(res_grp['resource_definitions']) }}"
    - ["{{ res_grp['resource_group_name'] }}"]
  loop_control:
    loop_var: res_item
