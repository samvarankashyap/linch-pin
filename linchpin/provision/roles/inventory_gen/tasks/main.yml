---

#- name: "DEBUG:: layout_file"
#  debug:
#    msg: "{{ layout_file }}"
#  when: state == "present"

#- include_vars: "{{ resources_file | default( default_resources_path+'/'+
#outputs.topology_name.replace(' ', '_').lower()+'.output' ) }}"

#- name: "Updating topology_outputs"
#  set_fact:
#    topology_outputs:
#      dummy_res: "{{ dummy_res }}"
#      os_server_res: "{{ os_server_res }}"
#      aws_ec2_res: "{{ aws_ec2_res }}"
#      gcloud_gce_res: "{{ gcloud_gce_res }}"
#      duffy_res: "{{ duffy_res }}"
#      beaker_res: "{{ beaker_res }}"
#      libvirt_res: "{{ libvirt_res }}"
#  when: state == "present" and inventory_layout is defined

- name: "Fetch outputs from db"
  hashlite:
    file_path: "/tmp/testdb.json"
    operation: "get"
    key: "{{ target_name }}_{{ runid }}"
  register: db_out

- name: "register topology_outputs"
  set_fact:
    topology_outputs: "{{ db_out['output'] }}"

- name: "hello"
  debug:
    msg: "{{ db_out['output'] }}"

# parse inventory generation files here : can be overridden by extravar layout_file currently defaulted to openshift-3node-cluster.yml
- name: "Parse inventory layout as a ordered dict"
  set_fact:
    inventory_layout: "{{ layout_file | default( default_layouts_path+'/'+
    'openshift-3node-cluster.yml') | ordered_yaml }}"

- name: "Updating inventory_path with the absolute path"
  set_fact:
    inventory_path: "{{ inventory_path | default( default_inventories_path+'/'+
    outputs.topology_name.replace(' ', '_').lower() ) }}.inventory"

#- name: inventory_layout
#  debug:
#    var: inventory_layout

- name: "Generate Generic Inventory"
  template:
    src: "templates/generic_inventory_formatter.j2"
    dest: "{{ inventory_path }}"
