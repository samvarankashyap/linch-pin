---
# This playbook contains common play that will be ran before the provisioning starts.
- name: "DEBUG: topology"
  debug:
    msg: "topology: {{ topology }} "

- name: "schema check for given topology file"
  schema_check:
    data: "{{ topology }}"
    schema: "{{ playbook_dir }}/../schemas/schema_v3.json"
  register: output
  tags: schema_validation
  ignore_errors: true

- name: "schema check for given topology file"
  schema_check:
    data: "{{ topology }}"
    schema: "{{ playbook_dir }}/../schemas/schema_v4.json"
  register: output
  tags: schema_validation
  when: output["failed"] == true

- name: "set fact for saving topology_job_ids"
  set_fact:
    topology_job_ids: []

- name: "Get the resource group types defined in topology"
  set_fact:
      res_grp_types: "{{ output.output.data.resource_groups | mapmultipleattr('res_group_type','resource_group_type') }}"

- name: "Filter resource_groups by type"
  set_fact: 
    filtered_res_grps : "{{ res_grp_types | res_grp_filter( output.output.data.resource_groups, 'res_group_type','resource_group_type')  }}"

- name: "Assigning facts with respect to their group type"
  set_fact:
    os_res_grps: "{{  filtered_res_grps['openstack'] | default([]) }}"
    aws_res_grps: "{{ filtered_res_grps['aws'] | default([]) }}"
    gcloud_res_grps: "{{ filtered_res_grps['gcloud'] | default([]) }}"
    duffy_res_grps: "{{ filtered_res_grps['duffy'] | default([]) }}"
    libvirt_res_grps: "{{ filtered_res_grps['libvirt'] | default([])}}"
    rax_res_grps: "{{ filtered_res_grps['rackspace'] | default([]) }}"
    bkr_res_grps: "{{ filtered_res_grps['beaker'] | default([]) }}"

- name: "Registering resource group vars from topology"
  set_fact:
    res_grp_vars: "{{ output.output.data.resource_group_vars }}"
  when: output.output.data.resource_group_vars is defined

- name: "output vars"
  set_fact:
    topology_outputs: {}
