- name: "register resource count"
  shell: python -c "print [x for x in range( 0, {{ res_def['count'] | default(1) }} )]"
  register: res_count

- name: "halt node"
  virt:
    name: "{{ libvirt_resource_name }}_{{ instance[1] }}"
    state: destroyed
    uri: "{{ instance[1]['uri'] | default('qemu:///system') }}"
  with_nested:
    - ["{{ res_def }}"]
    - "{{ res_count.stdout }}"
  loop_control:
    loop_var: instance
  register: res_def_output
  when: not async
  ignore_errors: yes

- name: "get XML definition of vm"
  command: "virsh -c {{ instance[1]  }} dumpxml {{ instance[0] }}_{{ instance[2] }}"
  with_nested:
    - ["{{  libvirt_resource_name }}"]
    - ["{{ res_def['uri'] | default('qemu:///system') }}"]
    - "{{ res_count.stdout }}"
  loop_control:
    loop_var: instance
  when: not async
  register: vm_xml_dump
  ignore_errors: yes

- name: "undefine node"
  virt:
    name: "{{ libvirt_resource_name }}_{{ instance[1] }}"
    command: undefine
    uri: "{{ instance[0]['uri'] | default('qemu:///system') }}"
  with_nested:
    - ["{{ res_def }}"]
    - "{{ res_count.stdout }}"
  loop_control:
    loop_var: instance
  register: res_def_output
  when: not async
  ignore_errors: yes

- name: "Delete associated image files"
  file2:
    state: absent
    path: "{{ inst }}"
  with_items: "{{ vm_xml_dump | get_libvirt_files }}"
  loop_control:
    loop_var: inst
  become: yes
  ignore_errors: yes
