# linchpin configuration file
# structured in INI style
# use %% to allow code interpolation
# use % to use config interpolation

[DEFAULT]
# name of the python package (Redundant, but easier than programmatically
# obtaining the value. It's very unlike to change.)
pkg = linchpin

[database]
path = /tmp/testdb.json
driver = internal

[lp]
# load custom ansible modules from here
module_folder = library

pf_excludes = topology_upstream,layout_upstream


[evars]
# extra vars to pass to the ansible playbook being executed
async = False
async_timeout = 1000
output = True
check_mode = False
# default paths in playbooks
#
# lp_path = <src_dir>/linchpin
# determined in the load_config method of # linchpin.cli.LinchpinCliContext
#

# if either of these change, the value in linchpin/templates must also change
layouts_folder = layouts
topologies_folder = topologies

schemas_folder = schemas

resources_folder = resources
inventories_folder = inventories
hooks_folder = hooks

# used in the API/CLI only
playbooks_folder = provision

# inputs
default_schemas_path = {{ lp_path }}/defaults/%(schemas_folder)s
default_topologies_path = {{ lp_path }}/defaults/%(topologies_folder)s
default_layouts_path = {{ lp_path }}/defaults/%(layouts_folder)s

# resources, formerly outputs
default_resources_path = {{ lp_path }}/defaults/%(resources_folder)s
default_inventories_path = {{ lp_path }}/defaults/%(inventories_folder)s

# default_schema interpolates the default_schemas_path from above
schema_v3 = %(default_schemas_path)s/schema_v3.json
schema_v4 = %(default_schemas_path)s/schema_v4.json

# default credentials data, this path doesn't automatically exist
default_credentials_path = ~/.config/linchpin

#keystore_path: "{{ playbook_dir }}/../keystore"


[init]
# source path of files generated by linchpin init
source = templates/
# formal name of the PinFile. Can be changed as desired.
pinfile = PinFile


[playbooks]
# possible playbook actions and the corresponding action file
up = site.yml
destroy = site.yml
down = site.yml
schema_check = schemacheck.yml
inv_gen = invgen.yml
test = test.yml


[logger]
enable = True
file = linchpin.log
format = %%(levelname)s %%(asctime)s %%(message)s
dateformat = %%m/%%d/%%Y %%I:%%M:%%S %%p
level = logging.DEBUG

[console]
# logging to the console should also be possible
enable = True # DO NOT REMOVE. Placeholder only, cannot disable.
format = %%(message)s
level = logging.INFO

[hookstates]
up = pre,post
inv = pre
destroy = pre,post

[extensions]
resource = .output
inventory = .inventory

[ansible]
console = False

[states]
# in future each state will carry a comma seperated substates
preup = preup
predestroy = predestroy
postup = postup
postdestroy = postdestroy

[repository_control]
driver = github

[fetch_types]
layouts = True
topologies = True 
hooks = True 
credentials = True
PinFile = True
resources = False 
inventory = False

[fetch_aliases]
layout = layouts
topology = topologies
hooks = hooks
credentials = credentials
pinfile = PinFile
workspace = workspace
